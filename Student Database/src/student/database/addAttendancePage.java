/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package student.database;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author OM
 */
public class addAttendancePage extends javax.swing.JFrame {

    /**
     * Creates new form addAttendancePage
     */
    public addAttendancePage() {
        initComponents();
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 51));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ROll NUMBER", "TOC", "Out Of", "SDL", "Out of", "SEPM", "Out Of", "DBMS", "Out of", "TOTAL", "Out Of"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(10).setResizable(false);
        }

        jButton1.setText("P");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbmsPresent(evt);
            }
        });

        jButton2.setText("P");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tocPresent(evt);
            }
        });

        jButton3.setText("P");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sepmPresent(evt);
            }
        });

        jButton4.setText("A");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sepmAbsent(evt);
            }
        });

        jButton5.setText("A");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbmsAbsent(evt);
            }
        });

        jButton7.setText("A");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sdlAbsent(evt);
            }
        });

        jButton8.setText("P");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sdlPresent(evt);
            }
        });

        jButton9.setText("A");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tocAbsent(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("ADD ATTENDANCE :");

        jButton6.setText("BACK");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFunc(evt);
            }
        });

        jButton10.setText("LOG OUT");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOut(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(139, 139, 139)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jButton9)
                                .addGap(131, 131, 131)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jButton7)
                                .addGap(124, 124, 124)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jButton4)
                                .addGap(134, 134, 134)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jButton5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 379, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton9)
                        .addComponent(jButton8)
                        .addComponent(jButton7)
                        .addComponent(jButton3)
                        .addComponent(jButton4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void refresh(){
        String url = "jdbc:mysql://localhost:3306/studentDatabase";
        String pass = "";
        String uname = "root";
        String query = "select * from attend" ;
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(url,uname,pass);
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);
            while(rs.next()){
                model.addRow(new Object[]{rs.getInt(1),rs.getInt(2),rs.getInt(3),rs.getInt(4),rs.getInt(5),rs.getInt(6),rs.getInt(7),rs.getInt(8),rs.getInt(9),rs.getInt(10),rs.getInt(11)});
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    private void tocPresent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tocPresent
        
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int row  = jTable1.getSelectedRow();
        
        if(row != -1){
            String url = "jdbc:mysql://localhost:3306/studentDatabase";
            String pass = "";
            String uname = "root";
            String query = "update attend set toc = ?,toco = ? where roll = ?";

            model.setValueAt(Integer.valueOf(model.getValueAt(row, 1).toString()) + 1, row, 1);
            model.setValueAt(Integer.valueOf(model.getValueAt(row, 2).toString()) + 1, row, 2);
            System.out.print(Integer.valueOf(model.getValueAt(row, 0).toString()));
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(url,uname,pass);
                PreparedStatement ps = con.prepareStatement(query);
                ps.setInt(1, Integer.valueOf(model.getValueAt(row, 1).toString()) + 1);
                ps.setInt(2, Integer.valueOf(model.getValueAt(row, 2).toString()) + 1);
                ps.setInt(3,Integer.valueOf(model.getValueAt(row, 0).toString()));
                ps.executeUpdate();
            } catch (Exception e){
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row.");
        }
        new CalTotal(model,row,"P").start();
    }//GEN-LAST:event_tocPresent

    private void sdlPresent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sdlPresent
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int row  = jTable1.getSelectedRow();
        if(row != -1){
            String url = "jdbc:mysql://localhost:3306/studentDatabase";
            String pass = "";
            String uname = "root";
            String query = "update attend set sdl = ?,sdlo = ? where roll = ?";

            model.setValueAt(Integer.valueOf(model.getValueAt(row, 3).toString()) + 1, row, 3);
            model.setValueAt(Integer.valueOf(model.getValueAt(row, 4).toString()) + 1, row, 4);
            System.out.print(Integer.valueOf(model.getValueAt(row, 0).toString()));
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(url,uname,pass);
                PreparedStatement ps = con.prepareStatement(query);
                ps.setInt(1, Integer.valueOf(model.getValueAt(row, 3).toString()) + 1);
                ps.setInt(2, Integer.valueOf(model.getValueAt(row, 4).toString()) + 1);
                ps.setInt(3,Integer.valueOf(model.getValueAt(row, 0).toString()));
                ps.executeUpdate();
            } catch (Exception e){
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row.");
        }
        new CalTotal(model,row,"P").start();
    }//GEN-LAST:event_sdlPresent

    private void sepmPresent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sepmPresent
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int row  = jTable1.getSelectedRow();
        if(row != -1){
            String url = "jdbc:mysql://localhost:3306/studentDatabase";
            String pass = "";
            String uname = "root";
            String query = "update attend set sepm = ?,sepmo = ? where roll = ?";

            model.setValueAt(Integer.valueOf(model.getValueAt(row, 5).toString()) + 1, row, 5);
            model.setValueAt(Integer.valueOf(model.getValueAt(row, 6).toString()) + 1, row, 6);
            System.out.print(Integer.valueOf(model.getValueAt(row, 0).toString()));
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(url,uname,pass);
                PreparedStatement ps = con.prepareStatement(query);
                ps.setInt(1, Integer.valueOf(model.getValueAt(row, 5).toString()) + 1);
                ps.setInt(2, Integer.valueOf(model.getValueAt(row, 6).toString()) + 1);
                ps.setInt(3,Integer.valueOf(model.getValueAt(row, 0).toString()));
                ps.executeUpdate();
            } catch (Exception e){
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row.");
        }
        new CalTotal(model,row,"P").start();
    }//GEN-LAST:event_sepmPresent

    private void dbmsPresent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbmsPresent
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int row  = jTable1.getSelectedRow();
        if(row != -1){
            String url = "jdbc:mysql://localhost:3306/studentDatabase";
            String pass = "";
            String uname = "root";
            String query = "update attend set dbms = ?,dbmso = ? where roll = ?";

            model.setValueAt(Integer.valueOf(model.getValueAt(row, 7).toString()) + 1, row, 7);
            model.setValueAt(Integer.valueOf(model.getValueAt(row, 8).toString()) + 1, row, 8);
            System.out.print(Integer.valueOf(model.getValueAt(row, 0).toString()));
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(url,uname,pass);
                PreparedStatement ps = con.prepareStatement(query);
                ps.setInt(1, Integer.valueOf(model.getValueAt(row, 7).toString()) + 1);
                ps.setInt(2, Integer.valueOf(model.getValueAt(row, 8).toString()) + 1);
                ps.setInt(3,Integer.valueOf(model.getValueAt(row, 0).toString()));
                ps.executeUpdate();
            } catch (Exception e){
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row.");
        }
        new CalTotal(model,row,"P").start();
    }//GEN-LAST:event_dbmsPresent

    private void tocAbsent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tocAbsent
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int row  = jTable1.getSelectedRow();
        if(row != -1){
            String url = "jdbc:mysql://localhost:3306/studentDatabase";
            String pass = "";
            String uname = "root";
            String query = "update attend set toco = ? where roll = ?";
            model.setValueAt(Integer.valueOf(model.getValueAt(row, 2).toString()) + 1, row, 2);
            System.out.print(Integer.valueOf(model.getValueAt(row, 0).toString()));
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(url,uname,pass);
                PreparedStatement ps = con.prepareStatement(query);
                ps.setInt(1, Integer.valueOf(model.getValueAt(row, 2).toString()) + 1);
                ps.setInt(2,Integer.valueOf(model.getValueAt(row, 0).toString()));
                ps.executeUpdate();
            } catch (Exception e){
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row.");
        }
        new CalTotal(model,row,"A").start();
    }//GEN-LAST:event_tocAbsent

    private void sdlAbsent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sdlAbsent
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int row  = jTable1.getSelectedRow();
        if(row != -1){
            String url = "jdbc:mysql://localhost:3306/studentDatabase";
            String pass = "";
            String uname = "root";
            String query = "update attend set sdlo = ? where roll = ?";
            model.setValueAt(Integer.valueOf(model.getValueAt(row, 4).toString()) + 1, row, 4);
            System.out.print(Integer.valueOf(model.getValueAt(row, 0).toString()));
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(url,uname,pass);
                PreparedStatement ps = con.prepareStatement(query);
                ps.setInt(1, Integer.valueOf(model.getValueAt(row, 4).toString()) + 1);
                ps.setInt(2,Integer.valueOf(model.getValueAt(row, 0).toString()));
                ps.executeUpdate();
            } catch (Exception e){
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row.");
        }
        new CalTotal(model,row,"A").start();
    }//GEN-LAST:event_sdlAbsent

    private void sepmAbsent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sepmAbsent
        // TODO add your handling code here:
             DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int row  = jTable1.getSelectedRow();
        if(row != -1){
            String url = "jdbc:mysql://localhost:3306/studentDatabase";
            String pass = "";
            String uname = "root";
            String query = "update attend set sepmo = ? where roll = ?";
            model.setValueAt(Integer.valueOf(model.getValueAt(row, 6).toString()) + 1, row, 6);
            System.out.print(Integer.valueOf(model.getValueAt(row, 0).toString()));
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(url,uname,pass);
                PreparedStatement ps = con.prepareStatement(query);
                ps.setInt(1, Integer.valueOf(model.getValueAt(row, 6).toString()) + 1);
                ps.setInt(2,Integer.valueOf(model.getValueAt(row, 0).toString()));
                ps.executeUpdate();
            } catch (Exception e){
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row.");
        }
        new CalTotal(model,row,"A").start();
    }//GEN-LAST:event_sepmAbsent

    private void dbmsAbsent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbmsAbsent
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int row  = jTable1.getSelectedRow();
        if(row != -1){
            String url = "jdbc:mysql://localhost:3306/studentDatabase";
            String pass = "";
            String uname = "root";
            String query = "update attend set dbmso = ? where roll = ?";
            model.setValueAt(Integer.valueOf(model.getValueAt(row, 8).toString()) + 1, row, 8);
            System.out.print(Integer.valueOf(model.getValueAt(row, 0).toString()));
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(url,uname,pass);
                PreparedStatement ps = con.prepareStatement(query);
                ps.setInt(1, Integer.valueOf(model.getValueAt(row, 8).toString()) + 1);
                ps.setInt(2,Integer.valueOf(model.getValueAt(row, 0).toString()));
                ps.executeUpdate();
            } catch (Exception e){
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row.");
        }
        new CalTotal(model,row,"A").start();
    }//GEN-LAST:event_dbmsAbsent

    private void backFunc(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFunc
        this.dispose();
        chooseOption co = new chooseOption();
        co.setVisible(true);
    }//GEN-LAST:event_backFunc

    private void logOut(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOut
        this.dispose();
        teacherLogin tl = new teacherLogin();
        tl.setVisible(true);
    }//GEN-LAST:event_logOut

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addAttendancePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addAttendancePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addAttendancePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addAttendancePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addAttendancePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
class CalTotal extends Thread {
    DefaultTableModel model;
    int row;
    String status;
    public CalTotal(DefaultTableModel model1,int r, String status1){
        model = model1;
        row = r ;
        status = status1;
    }
    public void run() {
        if(row != -1) {
        String url = "jdbc:mysql://localhost:3306/studentDatabase";
        String pass = "";
        String uname = "root";
        String query = "update attend set total = ?,totalo = ? where roll = ?";
        if(status.equals("P")){   
            model.setValueAt(Integer.valueOf(model.getValueAt(row, 9).toString()) + 1, row, 9);
        } 
        model.setValueAt(Integer.valueOf(model.getValueAt(row, 10).toString()) + 1, row, 10);
        System.out.print(Integer.valueOf(model.getValueAt(row, 0).toString()));
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(url,uname,pass);
            PreparedStatement ps = con.prepareStatement(query);
            if(status.equals("P")){
                ps.setInt(1, Integer.valueOf(model.getValueAt(row, 9).toString()) + 1);
            } else {
                 ps.setInt(1, Integer.valueOf(model.getValueAt(row, 9).toString()));
            }
            ps.setInt(2, Integer.valueOf(model.getValueAt(row, 10).toString()) + 1);
            ps.setInt(3,Integer.valueOf(model.getValueAt(row, 0).toString()));
            ps.executeUpdate();
        } catch (Exception e){
            e.printStackTrace();
        }
        }
    }   
}